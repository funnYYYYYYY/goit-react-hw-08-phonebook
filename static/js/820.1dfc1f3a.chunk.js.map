{"version":3,"file":"static/js/820.1dfc1f3a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","pages/ContactsList.jsx"],"sourcesContent":["export const getContact = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nconst Container = styled.form`\n  border: 1px solid black;\n  display: block;\n  padding: 20px;\n  width: 250px;\n  height: 250px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  height: 20px;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  display: block;\n  height: 25px;\n  font-size: 18px;\n  margin-top: 5px;\n  margin-bottom: 20px;\n  &:focus {\n    outline: none;\n    border: 2px solid #468949;\n  }\n`;\n\nconst Button = styled.button`\n  height: 25px;\n  border-radius: 5px;\n  cursor: pointer;\n  border: none;\n  &:hover {\n    background-color: orange;\n    color: blue;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 30px;\n  color: black;\n  font-style: italic;\n  font-weight: bold;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nexport { Container, Label, Input, Button, Title };\n","import React, { useState } from 'react';\nimport { Container, Label, Input, Button } from '../Form/Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContact } from 'redux/contacts/selectors';\n\nimport { nanoid } from 'nanoid';\nimport { addContacts } from 'redux/contacts/operation';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContact);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const correctName = name.toLowerCase();\n    const IsContactList = contacts.find(\n      contact => contact.name.toLowerCase() === correctName\n    );\n\n    IsContactList\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContacts({ name, number, id: nanoid() }));\n    if (!IsContactList) {\n      setName('');\n      setNumber('');\n    }\n  };\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        console.log('Invalid subscription type');\n    }\n  };\n\n  const modelId = nanoid();\n  const numberId = nanoid();\n\n  return (\n    <Container autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label htmlFor={modelId}>Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n        id={modelId}\n      />\n      <Label htmlFor={numberId}>Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n        id={numberId}\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Container>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, getContact } from 'redux/contacts/selectors';\n\nimport { deleteContacts } from 'redux/contacts/operation';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n\n  const filters = useSelector(getFilter);\n  const normFilter = filters.toLowerCase();\n\n  const filterContactList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normFilter)\n  );\n\n  return (\n    <ul>\n      {filterContactList.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContacts(id));\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Label, Input } from 'components/Form/Form.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/sliceFilter';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const getFilterValue = e => {\n    return dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <>\n      <Label>Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getFilterValue}\n      />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operation';\nimport { Form } from '../components/Form/Form';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n        <Form />\n        <Filter />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Contacts />\n      </>\n    </HelmetProvider>\n  );\n}\n"],"names":["getContact","state","contacts","items","getFilter","filter","getIsLoading","isLoading","Container","styled","Label","Input","Button","Form","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","console","log","modelId","nanoid","numberId","autoComplete","onSubmit","preventDefault","correctName","toLowerCase","IsContactList","find","contact","alert","addContacts","id","htmlFor","type","pattern","title","required","onChange","Contacts","normFilter","filterContactList","includes","map","onClick","deleteContacts","Filter","filterContact","ContactsList","useEffect","fetchContacts"],"sourceRoot":""}